@page "{id:Guid?}"
@using EmailQueue.WebApp.Platform
@model EmailBatchModel
@{
    ViewData["Title"] = "Email Batch Details";
}

<h1>@ViewData["Title"]</h1>

@if (!string.IsNullOrEmpty(Model.NotificationMessage))
{
    <div class="alert alert-warning" role="alert">
        @Model.NotificationMessage
    </div>
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @Model.ErrorMessage
    </div>
}

<div class="clearfix my-4">
    <div class="border rounded p-3 bg-light-subtle float-start">
        <form method="post" class="row row-cols-auto g-3 align-items-center">
            <div class="col">
                <label asp-for="BatchId" class="col-form-label"></label>
            </div>
            <div class="col">
                <input asp-for="BatchId" class="form-control" />
            </div>
            <div class="col">
                <button type="submit" class="btn btn-primary">View</button>
            </div>
        </form>
    </div>
</div>

@if (Model.ShowResults)
{
    <h2 class="h4 text-secondary-emphasis">Batch ID: @Model.Id</h2>

    @if (!Model.EmailTasks.Any())
    {
        <div class="alert alert-info">
            No email tasks found for this Batch ID.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>#</th>
                    <th>Initiator</th>
                    <th>Subject</th>
                    <th>Recipients</th>
                    <th>From</th>
                    <th>Status</th>
                    <th>Created</th>
                    <th>Sent</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var task in Model.EmailTasks)
                {
                    <tr>
                        <td>@task.Counter</td>
                        <td>@task.ApiKeyOwner</td>
                        <td>@task.Subject</td>
                        <td>@string.Join(", ", task.Recipients)</td>
                        <td>@task.From</td>
                        <td>
                                <span class="badge bg-@(task.Status switch
                                                      {
                                                          "Sent" => "success",
                                                          "Failed" => "danger",
                                                          "Processing" => "warning",
                                                          _ => "secondary",
                                                      })">
                                    @task.Status
                                </span>
                        </td>
                        <td>@task.CreatedAt.ToLocalTime().ToString(AppSettings.DateTimeFormat)</td>
                        <td>@(task.AttemptedAt?.ToLocalTime().ToString(AppSettings.DateTimeFormat) ?? "-")</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
}
