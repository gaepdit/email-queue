@page
@using Sample.WebApp.Settings
@model BatchDetailsModel
@{
    ViewData["Title"] = "Email Batch Details";
}

@if (!string.IsNullOrEmpty(Model.NotificationMessage))
{
    <div class="alert alert-warning" role="alert">
        @Model.NotificationMessage
    </div>
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @Model.ErrorMessage
    </div>
}

<div class="clearfix my-4">
    <div class="border rounded p-3 bg-light-subtle float-start">
        <form method="post" class="row row-cols-auto g-3 align-items-center">
            <div class="col">
                <label asp-for="BatchId" class="col-form-label"></label>
            </div>
            <div class="col">
                <input asp-for="BatchId" class="form-control" />
            </div>
            <div class="col">
                <button type="submit" class="btn btn-primary">View</button>
            </div>
        </form>
    </div>
</div>

@if (Model.ShowResults)
{
    @if (!Model.EmailTasks.Any())
    {
        <div class="alert alert-info">
            No emails found for this Batch ID.
        </div>
    }
    else
    {
        <div class="alert alert-info">
            @Model.EmailTasks.Count() emails found for this Batch ID.
        </div>
    }

    @if (Model.BatchStatus != null)
    {
        <div class="table-responsive">
            <table class="table w-auto">
                <thead>
                <tr>
                    <th scope="col" class="text-end">Total</th>
                    <th scope="col" class="text-end">Queued</th>
                    <th scope="col" class="text-end">Sent</th>
                    <th scope="col" class="text-end">Failed</th>
                    <th scope="col" class="text-end">Skipped</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <th scope="row" class="text-end">@Model.BatchStatus.Count</th>
                    <td class="text-end">@Model.BatchStatus.Queued</td>
                    <td class="text-end">@Model.BatchStatus.Sent</td>
                    <td class="text-end">@Model.BatchStatus.Failed</td>
                    <td class="text-end">@Model.BatchStatus.Skipped</td>
                </tr>
                </tbody>
            </table>
        </div>
    }

    @if (Model.EmailTasks.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th scope="col" class="text-end">#</th>
                    <th scope="col">Initiator</th>
                    <th scope="col">Subject</th>
                    <th scope="col">Recipients</th>
                    <th scope="col" class="text-center">Status</th>
                    <th scope="col">Failure Reason</th>
                    <th scope="col" class="text-center">Created</th>
                    <th scope="col" class="text-center">Sent</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var task in Model.EmailTasks)
                {
                    <tr>
                        <td class="text-end">@task.Counter</td>
                        <td>@task.ClientName</td>
                        <td>@task.Subject</td>
                        <td>@string.Join(", ", task.Recipients)</td>
                        <td class="text-center">
                                <span class="badge bg-@(task.Status switch
                                                      {
                                                          "Sent" => "success",
                                                          "Failed" => "danger",
                                                          "Skipped" => "warning",
                                                          _ => "secondary",
                                                      })">
                                    @task.Status
                                </span>
                        </td>
                        <td>@Html.DisplayFor(_ => task.FailureReason, "TextOrPlaceholder")</td>
                        <td class="text-center">@task.CreatedAt.ToLocalTime().ToString(AppSettings.DateTimeFormat)</td>
                        <td class="text-center">@(task.AttemptedAt?.ToLocalTime().ToString(AppSettings.DateTimeFormat) ?? "-")</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
}
